name: Tests

on: [push, pull_request]

env:
  pg_port: 5432
  pg_user: username
  pg_pass: password
  pg_db: db

jobs:

  build:
    runs-on: ubuntu-latest
    
    services:
    
      elasticsearch:
        image: elasticsearch:8.4.0
        env:
          discovery.type: single-node
          xpack.security.enabled: false
          bootstrap.memory_lock: true
        ports:
          - 9200:9200
        options: --health-cmd "curl -s -I http://localhost:9200 | grep -q 'HTTP/1.1 200 OK'" --health-interval 10s --health-timeout 5s --health-retries 5
      
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_PORT: 5432
          POSTGRES_DB: db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        
    - name: Set envs
      run: |
        cat << EOF > .env
        POSTGRES_USER=username
        POSTGRES_PASSWORD=password
        POSTGRES_PORT=5432
        POSTGRES_DB=db
        ELASTICSEARCH_URL=http://localhost:9200
        EOF
        
    - name: Check envs
      run: |
        echo $POSTGRES_USER
        echo $POSTGRES_PASSWORD
        echo $POSTGRES_PORT
        echo $POSTGRES_DB
        echo $ELASTICSEARCH_URL
        
#     - name: provide .env
#       run: cp .env.example .env

#     - name: Build
#       run: go build -v ./...

    - name: Test
      run: make test-all
